/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@ionic/core';
import 'ionicons';


export namespace Components {

  interface AuthComp {
    'googleAuth': boolean;
  }
  interface AuthCompAttributes extends StencilHTMLAttributes {
    'googleAuth'?: boolean;
    'onAuthEmit'?: (event: CustomEvent) => void;
  }

  interface ChatApp {
    'title': string;
  }
  interface ChatAppAttributes extends StencilHTMLAttributes {
    'title'?: string;
  }

  interface ChatPage {
    'MESSAGE_TEMPLATE': string;
  }
  interface ChatPageAttributes extends StencilHTMLAttributes {
    'MESSAGE_TEMPLATE'?: string;
  }

  interface LoginForm {}
  interface LoginFormAttributes extends StencilHTMLAttributes {
    'onGoogleAuthEmit'?: (event: CustomEvent) => void;
    'onRegFormEmit'?: (event: CustomEvent) => void;
  }

  interface RegForm {
    'appName': string;
  }
  interface RegFormAttributes extends StencilHTMLAttributes {
    'appName'?: string;
    'onLoginFormEmit'?: (event: CustomEvent) => void;
  }

  interface UsernameButton {
    'username': string;
  }
  interface UsernameButtonAttributes extends StencilHTMLAttributes {
    'onOnUsernameClicked'?: (event: CustomEvent) => void;
    'username'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AuthComp': Components.AuthComp;
    'ChatApp': Components.ChatApp;
    'ChatPage': Components.ChatPage;
    'LoginForm': Components.LoginForm;
    'RegForm': Components.RegForm;
    'UsernameButton': Components.UsernameButton;
  }

  interface StencilIntrinsicElements {
    'auth-comp': Components.AuthCompAttributes;
    'chat-app': Components.ChatAppAttributes;
    'chat-page': Components.ChatPageAttributes;
    'login-form': Components.LoginFormAttributes;
    'reg-form': Components.RegFormAttributes;
    'username-button': Components.UsernameButtonAttributes;
  }


  interface HTMLAuthCompElement extends Components.AuthComp, HTMLStencilElement {}
  var HTMLAuthCompElement: {
    prototype: HTMLAuthCompElement;
    new (): HTMLAuthCompElement;
  };

  interface HTMLChatAppElement extends Components.ChatApp, HTMLStencilElement {}
  var HTMLChatAppElement: {
    prototype: HTMLChatAppElement;
    new (): HTMLChatAppElement;
  };

  interface HTMLChatPageElement extends Components.ChatPage, HTMLStencilElement {}
  var HTMLChatPageElement: {
    prototype: HTMLChatPageElement;
    new (): HTMLChatPageElement;
  };

  interface HTMLLoginFormElement extends Components.LoginForm, HTMLStencilElement {}
  var HTMLLoginFormElement: {
    prototype: HTMLLoginFormElement;
    new (): HTMLLoginFormElement;
  };

  interface HTMLRegFormElement extends Components.RegForm, HTMLStencilElement {}
  var HTMLRegFormElement: {
    prototype: HTMLRegFormElement;
    new (): HTMLRegFormElement;
  };

  interface HTMLUsernameButtonElement extends Components.UsernameButton, HTMLStencilElement {}
  var HTMLUsernameButtonElement: {
    prototype: HTMLUsernameButtonElement;
    new (): HTMLUsernameButtonElement;
  };

  interface HTMLElementTagNameMap {
    'auth-comp': HTMLAuthCompElement
    'chat-app': HTMLChatAppElement
    'chat-page': HTMLChatPageElement
    'login-form': HTMLLoginFormElement
    'reg-form': HTMLRegFormElement
    'username-button': HTMLUsernameButtonElement
  }

  interface ElementTagNameMap {
    'auth-comp': HTMLAuthCompElement;
    'chat-app': HTMLChatAppElement;
    'chat-page': HTMLChatPageElement;
    'login-form': HTMLLoginFormElement;
    'reg-form': HTMLRegFormElement;
    'username-button': HTMLUsernameButtonElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
